#!/usr/bin/env bash
#Disable redundant cat throughout the scrsipt.
#shellcheck disable=SC2002
set -eo pipefail

MY_SDKMAN_CONFIG="$HOME/.sdkman/etc/config"

__sdkman_mode() {
  if grep "sdkman_auto_answer=false" "$MY_SDKMAN_CONFIG"; then
    echo "interactive"
  else
    echo "batch"
  fi
}

__sdkman_batch_mode() {
  local mode=$1

  if [[ "$mode" != "batch" ]]; then
    # This is a bit of a hack to avoid the interactive prompt but setting
    # it on the commandline doesn't always work.
    sed -e "s|sdkman_auto_answer=false|sdkman_auto_answer=true|g" -i "$MY_SDKMAN_CONFIG"
  fi
}

__sdkman_interactive_mode() {
  local mode=$1

  if [[ "$mode" != "batch" ]]; then
    sed -e "s|sdkman_auto_answer=true|sdkman_auto_answer=false|g" -i "$MY_SDKMAN_CONFIG"
  fi
}

__sdkman_base() {
  local sdkman_mode
  local graal_v
  local maven_v
  local jbang_v
  local gradle_v

  if [[ ! -d "$HOME/.sdkman" ]]; then
    # It does feel that if we already have SDKMAN installed then
    # we could execute sdk selfupdate & sdk upgrade
    if [[ -n "$DPM_SKIP_JAVA_PROFILE" ]]; then
      curl -fSsL "https://get.sdkman.io?rcupdate=false" | bash
    else
      curl -fSsL "https://get.sdkman.io" | bash
    fi
  fi
  sdkman_mode=$(__sdkman_mode)
  __sdkman_batch_mode "$sdkman_mode"

  #shellcheck disable=SC1090
  source ~/.sdkman/bin/sdkman-init.sh

  graal_v=$(cat "$SDK_CONFIG" | yq -r ".sdkman.java")
  maven_v=$(cat "$SDK_CONFIG" | yq -r ".sdkman.maven")
  jbang_v=$(cat "$SDK_CONFIG" | yq -r ".sdkman.jbang")
  gradle_v=$(cat "$SDK_CONFIG" | yq -r ".sdkman.gradle")

  sdk install java "$graal_v"
  sdk install gradle "$gradle_v"
  sdk install maven "$maven_v"
  sdk install jbang "$jbang_v"
  echo "[+] GraalVM=$graal_v, Gradle=$gradle_v, Maven=$maven_v, jbang=$jbang_v"
  __sdkman_interactive_mode "$sdkman_mode"
}

__sdkman_upgrade() {
  local existing_version
  local candidate="$1"
  local sdkman_mode

  sdkman_mode=$(__sdkman_mode)
  __sdkman_batch_mode "$sdkman_mode"
  #shellcheck disable=SC1090
  source ~/.sdkman/bin/sdkman-init.sh
  sdk selfupdate
  sdk update
  existing_version=$(sdk current "$candidate" | grep -Po "([0-9\.]+)")
  sdk upgrade "$candidate"
  sdk uninstall "$candidate" "$existing_version"
  __sdkman_interactive_mode "$sdkman_mode"
}

sdk_install_java() {
  case "$1" in
  upgrade)
    shift
    __sdkman_upgrade "$@"
    sdk current
    ;;
  *)
    __sdkman_base
    ;;
  esac
}
