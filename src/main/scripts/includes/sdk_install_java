#!/usr/bin/env bash
#Disable redundant cat throughout the scrsipt.
#shellcheck disable=SC2002
set -eo pipefail

MY_SDKMAN_CONFIG="$HOME/.sdkman/etc/config"
JAVA_TOOLING="java gradle maven jbang"

__sdkman_mode() {
  if grep "sdkman_auto_answer=false" "$MY_SDKMAN_CONFIG"; then
    echo "interactive"
  else
    echo "batch"
  fi
}

__sdkman_batch_mode() {
  local mode=$1

  if [[ "$mode" != "batch" ]]; then
    # This is a bit of a hack to avoid the interactive prompt but setting
    # it on the commandline doesn't always work.
    sed -e "s|sdkman_auto_answer=false|sdkman_auto_answer=true|g" -i "$MY_SDKMAN_CONFIG"
  fi
}

__sdkman_interactive_mode() {
  local mode=$1

  if [[ "$mode" != "batch" ]]; then
    sed -e "s|sdkman_auto_answer=true|sdkman_auto_answer=false|g" -i "$MY_SDKMAN_CONFIG"
  fi
}

__sdkman_selfupdate() {
  local sdkman_mode
  #shellcheck disable=SC1090
  source ~/.sdkman/bin/sdkman-init.sh
  sdk selfupdate >/dev/null 2>&1
  sdk update >/dev/null 2>&1
}

__sdkman_reset() {
  local existing_version
  local configured_version
  local candidate="$1"
  local sdkman_mode

  __sdkman_selfupdate
  sdkman_mode=$(__sdkman_mode)
  __sdkman_batch_mode "$sdkman_mode"
  if [[ -z "$candidate" ]]; then
    echo "No candidate specified"
    return 1
  fi
  existing_version=$(sdk current "$candidate" | grep -Po "([0-9\.]+.*)")
  configured_version=$(cat "$SDK_CONFIG" | yq -r ".sdkman.$candidate")
  if [[ "$existing_version" != "$configured_version" ]]; then
    sdk install "$candidate" "$configured_version"
    if [[ -n "$existing_version" ]]; then
      sdk uninstall "$candidate" "$existing_version"
    fi
  else
    echo "No change in $candidate version ($existing_version)"
  fi
  __sdkman_interactive_mode "$sdkman_mode"
}

__sdkman_base() {
  local sdkman_mode
  local install_v

  if [[ ! -d "$HOME/.sdkman" ]]; then
    # It does feel that if we already have SDKMAN installed then
    # we could execute sdk selfupdate & sdk upgrade
    if [[ -n "$DPM_SKIP_JAVA_PROFILE" ]]; then
      curl -fSsL "https://get.sdkman.io?rcupdate=false" | bash
    else
      curl -fSsL "https://get.sdkman.io" | bash
    fi
  fi
  sdkman_mode=$(__sdkman_mode)
  __sdkman_batch_mode "$sdkman_mode"

  #shellcheck disable=SC1090
  source ~/.sdkman/bin/sdkman-init.sh

  for tool in $JAVA_TOOLING; do
    install_v=$(cat "$SDK_CONFIG" | yq -r ".sdkman.$tool")
    sdk install "$tool" "$install_v"
  done
  __sdkman_interactive_mode "$sdkman_mode"
}

__sdkman_upgrade() {
  local existing_version
  local candidate="$1"
  local sdkman_mode

  __sdkman_selfupdate
  sdkman_mode=$(__sdkman_mode)
  __sdkman_batch_mode "$sdkman_mode"
  if [[ -z "$candidate" ]]; then
    echo "No candidate specified"
    return 1
  fi
  existing_version=$(sdk current "$candidate" | grep -Po "([0-9\.]+.*)")
  sdk upgrade "$candidate"
  if [[ -n "$existing_version" ]]; then
    sdk uninstall "$candidate" "$existing_version"
  fi
  __sdkman_interactive_mode "$sdkman_mode"
}

sdk_install_java() {
  case "$1" in
  upgrade)
    shift
    __sdkman_upgrade "$@"
    ;;
  rebase | reset)
    shift
    __sdkman_reset "$@"
    ;;
  *)
    __sdkman_base
    ;;
  esac
  sdk current
}
