name: test
run-name: Run Tests
on:
  workflow_dispatch: null
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  pull-requests: write
env:
  JUST_VERSION: 1.40.0
jobs:
  # Basically run 'just tools' to install all the tools
  # and make sure we have "[+]" for as many entries in tools.yml
  test_tool_install:
    runs-on: ubuntu-latest
    name: install-tools
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: configure extras
        run: |
          sudo apt -y -qq update
          sudo apt install -y -qq libarchive-tools
          printf 'gitscripts:
            repo: mcwarman/gitscripts
          ' | tee -a config/repos-additions.yml
          printf 'kubeconform:
            repo: yannh/kubeconform
            version: v0.6.4
            artifact: kubeconform-linux-amd64.tar.gz
            contents: kubeconform
          ' | tee -a config/tools-additions.yml
      - name: Test Install
        id: install
        # jq + yq are available already in the github runner.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DPM_TOOLS_ADDITIONS_YAML: config/tools-additions.yml
          DPM_REPO_ADDITIONS_YAML: config/repos-additions.yml
        run: |
          pipx install gh-release-install
          # shellcheck disable=SC2002
          tool_count=$(cat "${{ github.workspace }}/config/tools.yml" | yq -p yaml -o json | jq -c '.[] | (if .repo == null then empty else . end ) | .repo' | wc -l)
          # shellcheck disable=SC2002
          repo_count=$(cat "${{ github.workspace }}/config/repos.yml" | yq -p yaml -o json | jq -c '.[] | (if .repo == null then empty else . end ) | .repo' | wc -l)
          # shellcheck disable=SC2002
          archive_count=$(cat "${{ github.workspace }}/config/archives.yml" | yq -p yaml -o json | jq -c '.[] | (if .repo == null then empty else . end ) | .repo' | wc -l)
          # +2 for the additional tools requested in the step above.
          # shellcheck disable=SC2003
          # shellcheck disable=SC2086
          total_count=$(expr $tool_count + $repo_count + $archive_count + 2)
          install_count=$(just install all | grep -c "attempt install")
          if [[ "$total_count" != "$install_count" ]]; then
            echo "::error::mismatch between tools.yml [$total_count] and installed tools [$install_count]"
            exit 1
          fi
  test_rust_install:
    runs-on: ubuntu-latest
    name: install-rust
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk rust
          cargo binstall -V
  test_nvm_install:
    runs-on: ubuntu-latest
    name: install-nvm
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk nvm
  test_tfenv_install:
    runs-on: ubuntu-latest
    name: install-terraform
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk tvm terraform
          "$HOME/.local/bin/terraform" -version
  test_tofuenv_install:
    runs-on: ubuntu-latest
    name: install-opentofu
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk tvm opentofu
          "$HOME/.local/bin/tofu" -version
  test_tenv_install:
    runs-on: ubuntu-latest
    name: install-tenv
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test bootstrap
        id: test-bootstrap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt -y -qq update
          sudo apt install -y -qq libarchive-tools
          just install archives
          echo "$HOME/.local/share/ubuntu-dpm/tofuutils/tenv" >> "$GITHUB_PATH"
      - name: Test Install
        id: install
        env:
          TENV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk tvm tenv
          tofu -version
          terraform -version
  test_rvm_install:
    runs-on: ubuntu-latest
    name: install-rvm
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk rvm
  test_sdkman_install:
    runs-on: ubuntu-latest
    name: install-sdkman
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk java
  test_goenv_install:
    runs-on: ubuntu-latest
    name: install-goenv
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk goenv install
  test_pyenv_install:
    runs-on: ubuntu-latest
    name: install-pyenv
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk pyenv install
  test_sonar_scanner_install:
    runs-on: ubuntu-latest
    name: install-sonar-scanner
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: "adopt"
          java-version: "21"
      - name: Install Just
        uses: taiki-e/install-action@ab3728c7ba6948b9b429627f4d55a68842b27f18 # v2.50.3
        with:
          tool: just@${{ env.JUST_VERSION }}
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just sdk sonar-scanner
      - name: Test Command
        run: |
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          sonar-scanner --version
  test_status:
    name: Assert Tests Passed
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test_tool_install
      - test_rust_install
      - test_nvm_install
      - test_tfenv_install
      - test_tofuenv_install
      - test_tenv_install
      - test_rvm_install
      - test_sdkman_install
      - test_goenv_install
      - test_sonar_scanner_install
      - test_pyenv_install
    steps:
      - name: test status
        id: test_status
        run: |
          function all_tests_pass() {
            expected="$#"
            counter=0
            while true; do
              case "$1" in
                success)
                  counter=$((counter+1))
                  shift;;
                *) break ;;
              esac
            done
            if [[ "$counter" == "$expected" ]]; then
              return 0
            else
              return 1
            fi
          }
          if all_tests_pass \
            "${{ needs.test_rust_install.outputs.result || 'failure'}}" \
            "${{ needs.test_nvm_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tfenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tofuenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_rvm_install.outputs.result || 'failure'}}" \
            "${{ needs.test_sdkman_install.outputs.result || 'failure'}}" \
            "${{ needs.test_goenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_pyenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_sonar_scanner_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tool_install.outputs.result || 'failure'}}";
          then
            echo "test_status=:thumbsup:" >> "$GITHUB_OUTPUT"
            echo ":thumbsup:" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "test_status=:thumbsdown:" >> "$GITHUB_OUTPUT"
            echo ":thumbsdown:" >> "$GITHUB_STEP_SUMMARY"
          fi
  tests_complete:
    name: Testing completed
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: success()
    needs:
      - test_tool_install
      - test_rust_install
      - test_nvm_install
      - test_tfenv_install
      - test_tofuenv_install
      - test_tenv_install
      - test_rvm_install
      - test_sdkman_install
      - test_goenv_install
      - test_pyenv_install
      - test_sonar_scanner_install
    steps:
      - name: test_complete
        uses: quotidian-ennui/actions-olio/pr-trigger@main
        with:
          event_type: test-complete-trigger
