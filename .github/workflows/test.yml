name: test
run-name: Run Tests

on:
  workflow_dispatch:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  # Basically run 'just tools' to install all the tools
  # and make sure we have "[+]" for as many entries in tools.yml
  test_tool_install:
    runs-on: ubuntu-latest
    name: install-tools
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        # jq + yq are available already in the github runner.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install gh-release-install
          # shellcheck disable=SC2002
          tool_count=$(cat "${{ github.workspace }}/config/tools.yml" | yq -p yaml -o json | jq -c '.[] | (if .repo == null then empty else . end ) | .repo' | wc -l)
          install_count=$(just tools | grep -c "attempt install")
          if [[ "$tool_count" != "$install_count" ]]; then
            echo "::error::mismatch between tools.yml [$tool_count] and installed tools [$install_count]"
            exit 1
          fi

  test_rust_install:
    runs-on: ubuntu-latest
    name: install-rust
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just install_rust
          cargo binstall -V

  test_nvm_install:
    runs-on: ubuntu-latest
    name: install-nvm
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just install_nvm

  test_tfenv_install:
    runs-on: ubuntu-latest
    name: install-terraform
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just install_tvm terraform
          "$HOME/.local/bin/terraform" -version

  test_tofuenv_install:
    runs-on: ubuntu-latest
    name: install-opentofu
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just install_tvm opentofu
          "$HOME/.local/bin/tofu" -version

  test_rvm_install:
    runs-on: ubuntu-latest
    name: install-rvm
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just install_rvm

  test_sdkman_install:
    runs-on: ubuntu-latest
    name: install-sdkman
    outputs:
      result: ${{ steps.install.outcome || 'failure' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Install Just
        uses: taiki-e/install-action@d475def0028dbe8f19e36f8f5bc73b90cfc78de8 # v2.32.1
        with:
          tool: just@1.24.0
      - name: Test Install
        id: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just install_sdkman

  test_status:
    name: Assert Tests Passed
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test_tool_install
      - test_rust_install
      - test_nvm_install
      - test_tfenv_install
      - test_tofuenv_install
      - test_rvm_install
      - test_sdkman_install
    steps:
      - name: test status
        id: test_status
        run: |
          function all_tests_pass() {
            expected="$#"
            counter=0
            while true; do
              case "$1" in
                success)
                  counter=$((counter+1))
                  shift;;
                *) break ;;
              esac
            done
            if [[ "$counter" == "$expected" ]]; then
              return 0
            else
              return 1
            fi
          }
          if all_tests_pass \
            "${{ needs.test_rust_install.outputs.result || 'failure'}}" \
            "${{ needs.test_nvm_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tfenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tofuenv_install.outputs.result || 'failure'}}" \
            "${{ needs.test_rvm_install.outputs.result || 'failure'}}" \
            "${{ needs.test_sdkman_install.outputs.result || 'failure'}}" \
            "${{ needs.test_tool_install.outputs.result || 'failure'}}";
          then
            echo "test_status=:thumbsup:" >> "$GITHUB_OUTPUT"
            echo ":thumbsup:" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "test_status=:thumbsdown:" >> "$GITHUB_OUTPUT"
            echo ":thumbsdown:" >> "$GITHUB_STEP_SUMMARY"
          fi